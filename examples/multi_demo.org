* sleep_print Pass
This test demonstrates use of TESTY_MULTI commands to launch several
concurrent programs, wait for all of them then check their output. It
should pass.

#+TESTY: program="TESTY_MULTI"
#+TESTY: timeout=3s

#+BEGIN_SRC text
>> START spA sleep_print 2 'A sleep_print'
>> START spB sleep_print 1 'B sleep_print'
>> START spC sleep_print 2 'C sleep_print'

>> WAIT_ALL
<testy> WAIT for spA
<testy> WAIT for spB
<testy> WAIT for spC

>> OUTPUT spA cat
A sleep_print

>> OUTPUT_ALL cat
<testy> OUTPUT for spA
A sleep_print
<testy> OUTPUT for spB
B sleep_print
<testy> OUTPUT for spC
C sleep_print

>> CHECK_ALL cat
<testy> CHECK_FAILURES for spA
<testy> CHECK_FAILURES for spB
<testy> CHECK_FAILURES for spC
#+END_SRC



* sleep_print Timeout Failure
This test launches several programs but one of them will not complete
due to a timeout.

#+TESTY: program="TESTY_MULTI"
#+TESTY: timeout=3s

#+BEGIN_SRC text
>> START spA sleep_print 2 'A sleep_print'
>> START spB sleep_print 5 'B sleep_print'
>> START spC sleep_print 2 'C sleep_print'

>> WAIT_ALL
<testy> WAIT for spA
<testy> WAIT for spB
<testy> WAIT for spC

>> OUTPUT spA cat
A sleep_print

>> OUTPUT_ALL cat
<testy> OUTPUT for spA
A sleep_print
<testy> OUTPUT for spB
B sleep_print
<testy> OUTPUT for spC
C sleep_print

>> CHECK_ALL cat
<testy> CHECK_FAILURES for spA
<testy> CHECK_FAILURES for spB
<testy> CHECK_FAILURES for spC
#+END_SRC



