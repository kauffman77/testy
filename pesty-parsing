#!/usr/bin/env python3

# preliminary testing on parsing org files for test contents

import re
import sys
import itertools                # for batching adjacent split lines like title/content

infile = sys.argv[1]
contents = ""
with open(infile) as f:
  contents = str(f.read())

# allow splits between lines starting with '*' and keep the separator
# lines as part of the split (they are test titles)
regex = re.compile(r"(^\* .*$)",re.MULTILINE)
parts = re.split(regex, contents)

preamble = parts[0]               # preceding the first test, stuff like #+title
titles   = parts[1:len(parts):2]  # titles of each test
contents = parts[2:len(parts):2]  # contents of each test
titles_contents = itertools.batched(parts[1:],2)
titles_contents = zip(parts[1:len(parts):2],parts[2:len(parts):2])

# python provides a number of ways to do the above; involving
# itertools seems risky as it was added in python 3.12 (very late) and
# is not avialable on Grace

print("########################################")
print(f"PREMABLE:\n{preamble}\n")
# for i in range(len(titles)):
#   print("########################################")
#   print(f"TITLE: {titles[i]}\n")
#   print(f"CONTENTS:\n{contents[i]}\n")

for title,content in titles_contents:
  print("########################################")
  print(f"TITLE: {title}\n")
  print(f"CONTENT:\n{content}\n")

